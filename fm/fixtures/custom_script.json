[
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Vehicle", 
  "modified": "2017-06-21 16:39:29.623531", 
  "name": "Vehicle-Client", 
  "script": "frappe.ui.form.on('Vehicle', {\n    validate: function(frm) {\n        cuotas = frm.doc.cuotas\n        if (cuotas && cuotas.length > 0) {\n            total_insurance = 0\n\n            cuotas.forEach(function(row) {\n                total_insurance += row.amount\n            })\n\n            frappe.call({\n                method: \"fm.utilities.add_insurance_to_loan\",\n                args: {\n                    \"chasis_no\": frm.doc.license_plate,\n                    \"total_insurance\": total_insurance\n                },\n                callback: function(response) {\n                    var name = response.message\n\n                    frappe.show_alert(\n                        repl(\"Loan %(loan)s was updated\", {\n                            \"loan\": name\n                        }),\n                    10)\n                }\n            })\n        }\n    },\n    renew: function(frm) {\n        if ( !frm.doc.insurance_company )\n            frappe.throw(\"Debe ingresar el nombre de la aseguradora\")\n\n        if ( !frm.doc.policy_no )\n            frappe.throw(\"Debe ingresar el numero de poliza del cliente\")\n\n        if (frm.doc.financiamiento) {\n            if (frm.doc.amount > 0) {\n                amount = Math.ceil(frm.doc.amount / 3)\n                var today = frappe.datetime.get_today()\n                date = frappe.datetime.add_months(today, 1)\n\n                frm.clear_table(\"cuotas\")\n\n                for (i = 0; i < 3; i++) {\n                    frm.add_child(\"cuotas\", { \"date\": date, \"amount\": amount, \"status\": \"PENDING\" })\n\n                    date = frappe.datetime.add_months(date, 1)\n                }\n\n                refresh_field(\"cuotas\")\n                frm.save()\n            } else {\n                frappe.msgprint(\"Si opta por el financiamiento el monto de la poliza debe ser mayor que cero\")\n            }\n        } else {\n            frm.set_value(\"amount\", 0)\n        }\n    },\n    validate: function(frm) {\n        // create a new Array from the history\n        var new_history = Array.from(frappe.route_history)\n\n        // then reversed the new history array\n        var reversed_history = new_history.reverse()\n\n        // not found flag to stop the bucle\n        var not_found = true\n\n        // iterate the array to find the last Loan visited\n        $.each(reversed_history, function(idx, value) {\n            \n            // see if there is a Loan that was visited in this\n            // section. if found it the redirects the browser to\n            // asumming that the user came from that Loan\n            if (not_found && \"Form\" == value[0] && \"Loan\" == value[1]) {\n\n                // give a timeout before switching the location\n                setTimeout(function() {\n                    // set the route to the latest opened Loan\n                    frappe.set_route(value)\n                }, 1500)\n\n                // set the flag to false to finish\n                not_found = false\n            }\n        })\n    }\n})", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Translation", 
  "modified": "2017-05-03 16:23:21.040330", 
  "name": "Translation-Client", 
  "script": "frappe.ui.form.on(\"Translation\", {\n    refresh: function(frm) {\n        if(frm.doc.__islocal) return\n        frm.add_custom_button(__(\"Duplicate\"), function(event){\n            frm.doc.source_name = \"\"\n            frm.doc.target_name = \"\"\n            frm.copy_doc()\n        })\n    }\n})\n", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "ToDo", 
  "modified": "2017-05-12 03:03:01.791672", 
  "name": "ToDo-Client", 
  "script": "frappe.ui.form.on(\"ToDo\", {\n\tonload: function(frm){\n  \t\tfrm.set_df_property(\"reference_name\", \"read_only\", frm.doc.reference_type==\"Loan\")\n\t}\n})", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Journal Entry", 
  "modified": "2017-06-29 15:50:05.721815", 
  "name": "Journal Entry-Client", 
  "script": "frappe.ui.form.on(\"Journal Entry\", {\n    refresh: function(frm) {\n        var callback = function(response) {\n            if (frm.doc.__islocal || !response.message) \n                return 0 // exit code is zero\n\n            var list = response.message\n            var cur_route, prev_route, next_route\n            var index = 0, prev_index = 0, next_index = 0\n\n            for ( ; index < list.length; index++) {\n                prev_index = index - 1 < 0 ? 0 : index - 1\n                next_index = index + 1 >= list.length ? list.length - 1 : index + 1\n\n                if (frm.doc.name == list[index].name) {\n                    prev_route = list[prev_index].name\n                    next_route = list[next_index].name\n                    cur_route = list[index].name\n\n                    break\n                }\n            }\n\n            var route_next = function(res) {\n                set_emp_route(next_route)\n            }\n            var route_prev = function(res) {\n                set_emp_route(prev_route)\n            }\n            var set_emp_route = function(docname) {\n                frappe.set_route([\"Form\", frm.doctype, docname])\n            }\n\n            if (prev_route != cur_route) frm.add_custom_button(\"<< Prev\", route_prev)\n\n            if (next_route != cur_route) frm.add_custom_button(\"Next >>\", route_next)\n        }\n\n        frappe.call({\n            \"method\": \"frappe.client.get_list\",\n            \"args\": {\n                \"doctype\": frm.doctype,\n                \"limit_page_lentgh\": 0,\n                \"filters\": {\n                    \"loan\": frm.doc.loan,\n                    \"es_un_pagare\": frm.doc.es_un_pagare\n                }\n            },\n            \"callback\": callback\n        })\n    },\n    on_submit: function(frm) {\n        // create a new Array from the history\n        var new_history = Array.from(frappe.route_history)\n\n        // then reversed the new history array\n        var reversed_history = new_history.reverse()\n\n        // not found flag to stop the bucle\n        var not_found = true\n\n        // iterate the array to find the last Loan visited\n        $.each(reversed_history, function(idx, value) {\n\n            // see if there is a Loan that was visited in this\n            // section. if found it the redirects the browser to\n            // asumming that the user came from that Loan\n            if (not_found && \"Form\" == value[0] && \"Loan\" == value[1]) {\n\n                // give a timeout before switching the location\n                setTimeout(function() {\n                    // set the route to the latest opened Loan\n                    // frappe.set_route(value)\n                }, 1500)\n\n                // set the flag to false to finish\n                not_found = false\n            }\n        })\n    }\n})", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Payment Entry", 
  "modified": "2017-06-20 14:23:07.220675", 
  "name": "Payment Entry-Client", 
  "script": "frappe.ui.form.on(\"Payment Entry\", {\n    on_submit: function(frm) {\n        // create a new Array from the history\n        var new_history = Array.from(frappe.route_history)\n\n        // then reversed the new history array\n        var reversed_history = new_history.reverse()\n\n        // not found flag to stop the bucle\n        var not_found = true\n\n        // iterate the array to find the last Loan visited\n        $.each(reversed_history, function(idx, value) {\n            \n            // see if there is a Loan that was visited in this\n            // section. if found it the redirects the browser to\n            // asumming that the user came from that Loan\n            if (not_found && \"Form\" == value[0] && \"Loan\" == value[1]) {\n\n                // give a timeout before switching the location\n                setTimeout(function() {\n                    // set the route to the latest opened Loan\n                    frappe.set_route(value)\n                }, 1500)\n\n                // set the flag to false to finish\n                not_found = false\n            }\n        })\n    },\n    es_un_pagare: function(frm){\n\n        // validate is the checkbox is checked first\n        if ( !frm.doc.es_un_pagare ){\n\n            // let's clear the pagare\n            frm.set_value(\"pagare\", 0)\n\n            // let's clear the loan\n            frm.set_value(\"loan\", undefined)\n\n            return 0 // exit is zero\n        }\n            \n        var callback = function(data){\n            frm.set_value(\"loan\", data.loan)\n\n            var _method = \"fm.api.next_repayment\"\n\n            var _args = {\n                \"loan\": frm.doc.loan\n            }\n\n            var _callback = function(response){\n\n                // set the response the repayment variable\n                var repayment = response.message\n\n                // set the index value to the pagare number\n                frm.set_value(\"pagare\", repayment.idx)\n            }\n\n            frappe.call({ \"method\": _method, \"args\": _args, \"callback\": _callback })\n        }\n\n        // link field to Loan List\n        var link_field = { \"label\": \"Prestamo\", \"fieldname\": \"loan\", \"fieldtype\": \"Link\", \"options\": \"Loan\" }\n\n        if ( !frm.doc.prompt ){\n\n            // let's show the prompt\n            frm.doc.prompt = frappe.prompt(link_field, callback, \"Seleccione el Prestamo\", \"Continuar\")\n        } else {\n            // let's just make it visible\n            var p = frm.doc.prompt\n\n            p.show()\n        }\n    }\n})", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Purchase Invoice", 
  "modified": "2017-07-01 22:32:59.710337", 
  "name": "Purchase Invoice-Client", 
  "script": "frappe.ui.form.on(\"Purchase Invoice\", {\n    onload_post_render: function(frm) {\n        if ( !frm.doc.docstatus && frm.doc.poliza_de_seguro){\n            frm.set_intro(\"Valide este documento para confirmar que se ha finalizado con la compra!\")\n        }\n    },\n    on_submit: function(frm) {\n        // create a new Array from the history\n        var new_history = Array.from(frappe.route_history)\n\n        // then reversed the new history array\n        var reversed_history = new_history.reverse()\n\n        // not found flag to stop the bucle\n        var not_found = true\n\n        // iterate the array to find the last Loan visited\n        $.each(reversed_history, function(idx, value) {\n\n            // see if there is a Loan that was visited in this\n            // section. if found it then redirect the browser to\n            // asumming that the user came from that Loan\n            if (not_found && \"Form\" == value[0] && \"Loan\" == value[1]) {\n\n                // give a timeout before switching the location\n                setTimeout(function() {\n                    // set the route to the latest opened Loan\n                    //frappe.set_route(value)\n                }, 1500)\n\n                // set the flag to false to finish\n                not_found = false\n            }\n        })\n    }\n});", 
  "script_type": "Client"
 }
]